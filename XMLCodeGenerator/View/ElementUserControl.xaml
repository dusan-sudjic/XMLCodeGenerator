<UserControl x:Class="XMLCodeGenerator.View.ElementUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:behaviors="clr-namespace:XMLCodeGenerator.Behaviors"
             xmlns:converters="clr-namespace:XMLCodeGenerator.Converters"
             xmlns:local="clr-namespace:XMLCodeGenerator.View"
             xmlns:local1="clr-namespace:XMLCodeGenerator.View.Attributes"
             xmlns:view="clr-namespace:XMLCodeGenerator.View"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             mc:Ignorable="d"
             x:Name="UC"
             >
    <UserControl.Resources>
        <converters:InverseBooleanToVisibilityConverter x:Key="InverseBooleanToVisibilityConverter"/>
        <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <converters:SubtractValueConverter x:Key="SubtractValueConverter"/>
        <Style TargetType="{x:Type GroupBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="GroupBox">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Border BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="5"
                                    Background="{TemplateBinding Background}">
                                <Grid Margin="6,10,6,6">
                                    <ContentPresenter ContentSource="Content"/>
                                </Grid>
                            </Border>
                            <ContentPresenter ContentSource="Header"
                                              Grid.Row="0"
                                              HorizontalAlignment="Left"
                                              VerticalAlignment="Top"
                                              Margin="10,-10,10,0">
                                <ContentPresenter.ContentTemplate>
                                    <DataTemplate>
                                        <Border Background="CornflowerBlue" Padding="2 0 2 0" CornerRadius="2">
                                            <TextBlock Text="{Binding}" Foreground="White" Background="CornflowerBlue" />
                                        </Border>
                                    </DataTemplate>
                                </ContentPresenter.ContentTemplate>
                            </ContentPresenter>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RoundedButton" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="7">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="LightGray"/>
            <Setter Property="BorderBrush" Value="DarkGray"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="Padding" Value="5,8"/>
        </Style>
    </UserControl.Resources>
    <Border x:Name="Border" Padding="5 0 0 0" HorizontalAlignment="Stretch" VerticalAlignment="Top" Margin="0 5 0 3" MinWidth="280" MaxWidth="2000">
        
        <Border.Style>
            <Style TargetType="Border">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsNew}" Value="True">
                        <Setter Property="BorderThickness" Value="2"/>
                        <Setter Property="BorderBrush" Value="ForestGreen"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding IsExtended}" Value="True">
                        <Setter Property="HorizontalAlignment" Value="Stretch"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding IsExtended}" Value="False">
                        <Setter Property="HorizontalAlignment" Value="Left"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding IsExtendable}" Value="False">
                        <Setter Property="HorizontalAlignment" Value="Stretch"/>
                    </DataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsNew}" Value="False"/>
                            <Condition Binding="{Binding IsHighlighted}" Value="True"/>
                            <Condition Binding="{Binding IsSelected}" Value="True"/>
                        </MultiDataTrigger.Conditions>
                        <Setter Property="BorderBrush" Value="DarkOrange"/>
                        <Setter Property="BorderThickness" Value="2"/>
                    </MultiDataTrigger>

                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsNew}" Value="False"/>
                            <Condition Binding="{Binding IsHighlighted}" Value="True"/>
                            <Condition Binding="{Binding IsSelected}" Value="False"/>
                        </MultiDataTrigger.Conditions>
                        <Setter Property="BorderBrush" Value="DarkOrange"/>
                        <Setter Property="BorderThickness" Value="1"/>
                    </MultiDataTrigger>

                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsNew}" Value="False"/>
                            <Condition Binding="{Binding IsHighlighted}" Value="False"/>
                            <Condition Binding="{Binding IsSelected}" Value="False"/>
                        </MultiDataTrigger.Conditions>
                        <Setter Property="BorderBrush" Value="Black"/>
                        <Setter Property="BorderThickness" Value="1"/>
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>
        </Border.Style>
        <Grid Opacity="1.0" Background="White">
            <Grid.ContextMenu>
                <ContextMenu>
                    <MenuItem Click="Copy_Click">
                        <MenuItem.Header>
                            <TextBlock>
                                <Run>Copy</Run>
                                <Run Text="{Binding Name}"></Run>
                            </TextBlock>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem Click="Cut_Click" Visibility="{Binding IsRemovable, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <MenuItem.Header>
                            <TextBlock>
                                <Run>Cut</Run>
                                <Run Text="{Binding Name}"></Run>
                            </TextBlock>
                        </MenuItem.Header>
                    </MenuItem>
                </ContextMenu>
            </Grid.ContextMenu>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <StackPanel x:Name="SidePanel" Visibility="{Binding IsExtendableAndIsNotWrapperElement, Converter={StaticResource BooleanToVisibilityConverter}}" Width="20" Orientation="Vertical" Grid.Column="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                <ToggleButton x:Name="ToggleButton" Cursor="Hand" Content="-" FontWeight="Bold" Width="20" Height="20" Margin="0 5 0 0" Click="ToggleButton_Click" FontSize="10" Padding="0">
                    <ToggleButton.Style>
                        <Style TargetType="ToggleButton">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsExtended}" Value="True">
                                    <Setter Property="Content" Value="-"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsExtended}" Value="False">
                                    <Setter Property="Content" Value="+"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>
            </StackPanel>
            <Grid Name="MainGrid" Grid.Column="1" HorizontalAlignment="Stretch">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid Grid.Row="0" HorizontalAlignment="Stretch">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="0" Cursor="Hand" ToolTip="XML preview" Height="24" Visibility="{Binding IsNotWrapperElement, Converter={StaticResource BooleanToVisibilityConverter}}" MouseLeftButtonDown="XMLPreview_Click" Margin="5" VerticalAlignment="Bottom" Padding="0 3 0 0">
                        <Run Text="{Binding Name}"/>
                        <Run Text="{Binding AdditionalInfo}" FontWeight="Bold" />
                        <Run Text="{Binding FunctionCalls}" Foreground="CornflowerBlue" FontStyle="Italic"/>
                    </TextBlock>
                    <StackPanel Grid.Column="1" Orientation="Horizontal" Margin="0 0 0 0" HorizontalAlignment="Left" Height="25" x:Name="AttributesContainer" Visibility="{Binding IsUnextendableAndHasEditableAttributes, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <ItemsControl x:Name="itemsControlUnextendedAttributes" ItemsSource="{Binding Attributes}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel HorizontalAlignment="Left" Orientation="Horizontal" Margin="0 0 0 -8"
                                        MaxWidth="{Binding ActualWidth, ElementName=Border, 
                                         Converter={StaticResource SubtractValueConverter}, 
                                         ConverterParameter=45}" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <local1:AttributeContainer DataContext="{Binding}" Margin="0 1 0 0"/>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </StackPanel>
                    <Button Grid.Column="2" Background="White" Foreground="CornflowerBlue" Height="25" Width="25" VerticalAlignment="Center"  Cursor="Hand" Margin="0 0 5 0"  ToolTip="Rename function" BorderThickness="0" Visibility="{Binding IsFunctionDefinition, Converter={StaticResource BooleanToVisibilityConverter}}" Click="RenameFunction_Click">🏷️</Button>
                    <Button x:Name="MapToClassButton" Grid.Column="2" Cursor="Hand" ToolTip="Map to class from external dll" Visibility="{Binding IsClassMappingEnabled, Converter={StaticResource BooleanToVisibilityConverter}}" BorderThickness="0" Margin="0 0 5 0"  Height="25" Width="25" Background="White"  Foreground="CornflowerBlue" Click="MapToClassButton_Click">🔍</Button>
                    <Button Grid.Column="3" Cursor="Hand" x:Name="AddButton" Visibility="{Binding HasRoomForNewChildElement, Converter={StaticResource BooleanToVisibilityConverter}}" Content="➕" FontSize="13" Foreground="CornflowerBlue" BorderThickness="0" Click="AddChildElement_Click" Background="White" Width="24" Height="24" Margin="0 5 5 5" VerticalAlignment="Center" HorizontalAlignment="Right">
                        <Button.ToolTip>
                            <TextBlock>
                                <Run>Add new element to </Run>
                                <Run Text="{Binding Name}"></Run>
                            </TextBlock>
                        </Button.ToolTip>
                    </Button>
                    <Button Grid.Column="4" Cursor="Hand" x:Name="DeleteButton" Visibility="{Binding IsRemovable, Converter={StaticResource BooleanToVisibilityConverter}}" Content="⛔" FontSize="13" Foreground="IndianRed" BorderThickness="0" Click="DeleteElement_Click" Background="White" Width="24" Height="24" Margin="0 5 5 5" VerticalAlignment="Center" HorizontalAlignment="Right">
                        <Button.ToolTip>
                            <TextBlock>
                                <Run>Delete </Run>
                                <Run Text="{Binding Name}"></Run>
                            </TextBlock>
                        </Button.ToolTip>
                    </Button>
                    <Button Grid.Column="4" Cursor="Hand" x:Name="ReplaceButton" Visibility="{Binding IsReplacable, Converter={StaticResource BooleanToVisibilityConverter}}" Content="⟳" FontSize="18" Padding="0 -2 0 6" Foreground="ForestGreen" BorderThickness="0" Click="DeleteElement_Click" Background="White" Width="24" Height="24" Margin="0 5 5 5" VerticalAlignment="Center" HorizontalAlignment="Right">
                        <Button.ToolTip>
                            <TextBlock>
                                <Run>Replace </Run>
                                <Run Text="{Binding Name}"></Run>
                            </TextBlock>
                        </Button.ToolTip>
                    </Button>
                    <StackPanel Grid.Column="5" Orientation="Vertical" Width="16" Height="34" Visibility="{Binding IsMovable, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <Button Visibility="{Binding IsMovableUp, Converter={StaticResource BooleanToVisibilityConverter}}" Height="17" Padding="0" Foreground="CornflowerBlue" Background="Transparent" BorderBrush="Transparent" Cursor="Hand" ToolTip="Move up" Click="MoveUp_Click">▲</Button>
                        <Button Visibility="{Binding IsMovableUp, Converter={StaticResource InverseBooleanToVisibilityConverter}}" Height="17" Padding="0" Foreground="CornflowerBlue" Opacity="0.3" Background="Transparent" BorderBrush="Transparent" ToolTip="Move up">
                            <Button.Template>
                                <ControlTemplate TargetType="Button">
                                    <Border Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        SnapsToDevicePixels="true">
                                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                            Content="{TemplateBinding Content}"
                                            RecognizesAccessKey="True" />
                                    </Border>
                                </ControlTemplate>
                            </Button.Template>
                            ▲
                        </Button>
                        <Button Visibility="{Binding IsMovableDown, Converter={StaticResource BooleanToVisibilityConverter}}" Height="17" Padding="0" Foreground="CornflowerBlue" Background="Transparent" BorderBrush="Transparent" Cursor="Hand" ToolTip="Move down" Click="MoveDown_Click">▼</Button>
                        <Button Visibility="{Binding IsMovableDown, Converter={StaticResource InverseBooleanToVisibilityConverter}}" Height="17" Padding="0" Foreground="CornflowerBlue" Opacity="0.3" Background="Transparent" BorderBrush="Transparent" ToolTip="Move down">
                            <Button.Template>
                                <ControlTemplate TargetType="Button">
                                    <Border Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        SnapsToDevicePixels="true">
                                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                Content="{TemplateBinding Content}"
                                                RecognizesAccessKey="True" />
                                    </Border>
                                </ControlTemplate>
                            </Button.Template>
                            ▼
                        </Button>
                    </StackPanel>
                </Grid>

                <Grid Grid.Row="1" HorizontalAlignment="Stretch" Margin="0,0,5,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <GroupBox Header=" Attributes " HorizontalAlignment="Stretch" Margin="0,10,0,0" BorderBrush="CornflowerBlue" 
                            x:Name="AttributesGroupBox"
                            Visibility="{Binding IsExtendedAndHasEditableAttributes, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <DockPanel LastChildFill="True">
                            <ItemsControl x:Name="itemsControlAttributes" ItemsSource="{Binding Attributes}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <WrapPanel HorizontalAlignment="Left" Orientation="Horizontal" Margin="0 0 0 -8"
                                            MaxWidth="{Binding ActualWidth, ElementName=AttributesGroupBox, 
                                             Converter={StaticResource SubtractValueConverter}, 
                                             ConverterParameter=15}" />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <local1:AttributeContainer DataContext="{Binding}"/>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </DockPanel>
                    </GroupBox>
                </Grid>


                <StackPanel Grid.Row="2" x:Name="ChildrenContainer" Visibility="{Binding IsExtended, Converter={StaticResource BooleanToVisibilityConverter}}" Margin="0 0 5 2" AllowDrop="True">
                    <ItemsControl x:Name="itemsControlChildren" ItemsSource="{Binding ChildViewModels}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <local:ElementUserControl DataContext="{Binding}" />
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </StackPanel>
                <StackPanel Height="10" Grid.Row="3" Visibility="{Binding IsExtended, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Label x:Name="EndLabel" Visibility="{Binding IsNotWrapperElement, Converter={StaticResource BooleanToVisibilityConverter}}" FontSize="8" Content="{Binding Name}" Padding="0 0 5 0" HorizontalAlignment="Right" VerticalAlignment="Top"></Label>
                </StackPanel>
            </Grid>
        </Grid>
    </Border>
</UserControl>